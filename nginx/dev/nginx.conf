worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    map $ssl_client_verify $client_verified {
        default $ssl_client_verify;
        "SUCCESS" "SUCCESS";
        "NONE" "NONE";
        "FAILED" "FAILED";
        "NO_CERT" "NO_CERT";
    }

    upstream flask_app {
        server app:8000;
    }

    server {
        listen 8443 ssl http2;
        server_name localhost;

        # TLS cert/key for dev server
        ssl_certificate     /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        # Trust store for client certs and CRL
        ssl_client_certificate /etc/nginx/ca/certs/ca.crt;
        ssl_crl               /etc/nginx/ca/crl/ca.crl;
        ssl_verify_client optional;

        # Strong TLS params (dev appropriate)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;
        resolver 127.0.0.11 valid=30s; # docker DNS

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header Referrer-Policy strict-origin-when-cross-origin;
        add_header Content-Security-Policy "default-src 'self'";

        location /healthz {
            proxy_pass http://flask_app/healthz;
        }

        location /debug/identity {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Sanitized client cert metadata
            proxy_set_header X-Client-Verify $client_verified;
            proxy_set_header X-Client-Cert-Fingerprint $ssl_client_fingerprint;
            proxy_set_header X-Client-Cert-Serial $ssl_client_serial;
            proxy_set_header X-Client-Cert-Subject $ssl_client_s_dn;
            proxy_set_header X-Client-Cert-Issuer $ssl_client_i_dn;
            # Escaped PEM client certificate for app-side SHA-256 fingerprinting
            proxy_set_header X-Client-Cert $ssl_client_escaped_cert;

            proxy_pass http://flask_app/debug/identity;
        }

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header X-Client-Verify $client_verified;
            proxy_set_header X-Client-Cert-Fingerprint $ssl_client_fingerprint;
            proxy_set_header X-Client-Cert-Serial $ssl_client_serial;
            proxy_set_header X-Client-Cert-Subject $ssl_client_s_dn;
            proxy_set_header X-Client-Cert-Issuer $ssl_client_i_dn;
            proxy_set_header X-Client-Cert $ssl_client_escaped_cert;

            proxy_pass http://flask_app;
        }
    }
}
